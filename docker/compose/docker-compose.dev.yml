version: "3.9"

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.3
    container_name: patra-es
    restart: unless-stopped
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms1g -Xmx1g   # ← 建议
      - TZ=Asia/Shanghai
    ports:
      - "9200:9200"     # 开发环境仅本机
    ulimits:                      # 提升文件句柄与锁内存
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - ../es/data:/usr/share/elasticsearch/data
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1" ]
      interval: 20s
      timeout: 10s
      retries: 10
    # Linux 宿主建议提前执行：sysctl -w vm.max_map_count=262144

  skywalking-oap:
    image: apache/skywalking-oap-server:10.2.0
    container_name: patra-skywalking-oap
    restart: unless-stopped
    environment:
      TZ: Asia/Shanghai
      SW_STORAGE: elasticsearch
      SW_STORAGE_ES_CLUSTER_NODES: elasticsearch:9200
      SW_STORAGE_ES_HTTP_PROTOCOL: http
      SW_STORAGE_ES_INDEX_SHARDS_NUMBER: 1
      SW_STORAGE_ES_INDEX_REPLICAS_NUMBER: 0
#      SW_LOGGING_LEVEL: DEBUG
      SW_TELEMETRY: prometheus
      SW_TELEMETRY_PROMETHEUS_HOST: 0.0.0.0
      SW_TELEMETRY_PROMETHEUS_PORT: 1234
      SW_HEALTH_CHECKER: default
      SW_LOG_LAL_FILES: sw-grpc-default
#      SW_CORE_GRPC_PORT: 11800      # gRPC/OTLP
#      SW_CORE_REST_PORT: 12800      # REST/UI 查询
#      SW_RECEIVER_ZIPKIN: default
#      SW_QUERY_ZIPKIN: default
#      SW_OTEL_RECEIVER: default
#      SW_OTEL_RECEIVER_ENABLED_HANDLERS: otlp-traces,otlp-metrics,otlp-logs
#      SW_OTEL_RECEIVER_ENABLED_HANDLERS: otlp-traces
    ports:
      - "11800:11800"   # gRPC (含 OTLP)
      - "12800:12800"   # HTTP / GraphQL
#    volumes:
#      - ../oap-lal/sw-grpc-default.yaml:/skywalking/config/lal/sw-grpc-sw-grpc-default.yaml:ro
    healthcheck:
      test: [ "CMD-SHELL", "curl -fsS http://127.0.0.1:12800/healthcheck >/dev/null" ]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 20s
    depends_on:
      elasticsearch:
        condition: service_healthy

  skywalking-ui:
    image: apache/skywalking-ui:10.2.0
    container_name: patra-skywalking-ui
    restart: unless-stopped
    environment:
      TZ: Asia/Shanghai
      SW_OAP_ADDRESS: "http://skywalking-oap:12800"
      SW_TIMEOUT: "30000"
    ports:
      - "8088:8080"
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.1:8080/ >/dev/null 2>&1 || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 10
    depends_on:
      skywalking-oap:
        condition: service_healthy

  mysql:
    image: mysql:8.0.36
    container_name: patra-mysql
    restart: unless-stopped
    ports: [ "13306:3306" ]     # 仅本机
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-123456}
      TZ: Asia/Shanghai
    command: >
      --default-authentication-plugin=caching_sha2_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_0900_ai_ci
      --lower_case_table_names=1
      --explicit_defaults_for_timestamp=ON
      --max_connections=300
    volumes:
      - ../mysql/data:/var/lib/mysql
      - ../mysql/conf.d:/etc/mysql/conf.d
      - ../mysql/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD-SHELL", "mysqladmin ping -uroot -p$$MYSQL_ROOT_PASSWORD -h 127.0.0.1 --silent" ]
      interval: 10s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7.0.15
    container_name: patra-redis
    restart: unless-stopped
    ports: [ "16379:6379" ]     # 仅本机
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]
    volumes:
      - ../redis/data:/data
      - ../redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 10

  nacos:
    image: nacos/nacos-server:v3.0.3
    container_name: patra-nacos
    restart: unless-stopped
    environment:
      - MODE=standalone
      - TZ=Asia/Shanghai
      - NACOS_AUTH_ENABLE=true
      - NACOS_AUTH_TOKEN=wur4obqxgTEPKRgkbloX3m4Gx+uUuIsp6YjKrGgv0=
      - NACOS_AUTH_IDENTITY_KEY=patra
      - NACOS_AUTH_IDENTITY_VALUE=patra
    ports:
      - "4000:8080"
      - "8848:8848"
      - "9848:9848"
      - "9849:9849"
    volumes:
      - ../nacos/logs:/home/nacos/logs
      - ../nacos/data:/home/nacos/data
    healthcheck:
      test: [ "CMD", "curl", "-fs", "http://localhost:8848/nacos/" ]
      interval: 10s
      timeout: 5s
      retries: 10

  xxl-job-admin:
    image: xuxueli/xxl-job-admin:3.2.0
    container_name: patra-xxl-job-admin
    restart: unless-stopped
    environment:
      TZ: Asia/Shanghai
      # 通过 PARAMS 传 Spring Boot 启动参数（官方镜像推荐做法）
      PARAMS: >
        --server.port=8080
        --server.servlet.context-path=/xxl-job-admin
        --spring.datasource.url=jdbc:mysql://mysql:3306/xxl_job?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
        --spring.datasource.username=xxl_job
        --spring.datasource.password=xxl_job_123456
        --xxl.job.accessToken=
    volumes:
      - ../xxl-job-admin/logs:/data/applogs
    ports:
      - "7070:8080"         # 本机访问 http://localhost:7070/xxl-job-admin
    healthcheck:
      test: ["CMD-SHELL", "bash -c 'exec 3<>/dev/tcp/127.0.0.1/8080'"]
      interval: 15s
      timeout: 5s
      retries: 10
      start_period: 20s
    depends_on:
      mysql:
        condition: service_healthy


  rocketmq-namesrv:
    image: apache/rocketmq:5.1.4
    container_name: patra-rocketmq-namesrv
    restart: unless-stopped
    environment:
      TZ: Asia/Shanghai
    command: [ "sh", "mqnamesrv" ]
    ports:
      - "9876:9876"           # NameServer，建议开发期只暴露本机
    volumes:
      - ../rocketmq/namesrv/logs:/home/rocketmq/logs
      - ../rocketmq/namesrv/store:/home/rocketmq/store
    healthcheck:
      test: [ "CMD-SHELL", "bash -c 'exec 3<>/dev/tcp/127.0.0.1/9876'" ]
      interval: 10s
      timeout: 5s
      retries: 10

  rocketmq-broker:
    image: apache/rocketmq:5.1.4
    container_name: patra-rocketmq-broker
    restart: unless-stopped
    environment:
      TZ: Asia/Shanghai
      NAMESRV_ADDR: rocketmq-namesrv:9876
      # 如客户端在宿主机/外网访问，请在 broker.conf 里设置 brokerIP1=宿主机IP
    command: >
      sh mqbroker --enable-proxy
      -c /home/rocketmq/rocketmq-5.1.4/conf/broker.conf
    ports:
      - "10909:10909"         # remoting
      - "10911:10911"         # remoting
      - "10912:10912"         # HA
      - "7071:8080"           # proxy (HTTP)
      - "8081:8081"           # proxy (gRPC/HTTP2) —— 5.x 客户端默认连这个
    volumes:
      - ../rocketmq/broker/logs:/home/rocketmq/logs
      - ../rocketmq/broker/store:/home/rocketmq/store
      - ../rocketmq/broker/conf/broker.conf:/home/rocketmq/rocketmq-5.1.4/conf/broker.conf:ro
    depends_on:
      rocketmq-namesrv:
        condition: service_started
    healthcheck:
      test: [ "CMD-SHELL", "bash -c 'exec 3<>/dev/tcp/127.0.0.1/10911 && exec 3<>/dev/tcp/127.0.0.1/8081'" ]
      interval: 15s
      timeout: 5s
      retries: 12
      start_period: 20s

  rocketmq-dashboard:
    image: apacherocketmq/rocketmq-dashboard:2.1.0
    container_name: patra-rocketmq-dashboard
    restart: unless-stopped
    environment:
      TZ: Asia/Shanghai
      JAVA_OPTS: "-Drocketmq.namesrv.addr=rocketmq-namesrv:9876"
    ports:
      - "4002:8082"           # Dashboard UI
    depends_on:
      rocketmq-namesrv:
        condition: service_started
    healthcheck:
      test: [ "CMD-SHELL", "wget -qO- http://127.0.0.1:8082/ >/dev/null 2>&1 || exit 1" ]
      interval: 15s
      timeout: 5s
      retries: 10
      start_period: 20s

networks:
  default:
    name: patra-net
